name: CI/CD Pipeline

on:
  push:
    branches: [main, staging]
  pull_request:
    branches: [main, staging]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '18.x'
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            **/node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
      - name: Install dependencies
        run: |
          yarn install --frozen-lockfile
          cd client && yarn install --frozen-lockfile
      - name: Run Lint
        working-directory: ./client
        run: |
          yarn lint
      - name: Run tests
        run: |
          yarn test --ci
      - name: Build client for staging
        if: github.ref == 'refs/heads/staging'
        working-directory: ./client
        run: |
          echo "REACT_APP_API_URL=http://${{ secrets.STAGING_EC2_HOST }}:4000" > .env
          yarn build      
      - name: Build client for production
        if: github.ref == 'refs/heads/main'
        working-directory: ./client
        run: |
          echo "REACT_APP_API_URL=http://${{ secrets.PROD_EC2_HOST }}:4000" > .env
          yarn build
      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build
          path: client/build

  deploy-staging:
    needs: build-and-test
    if: github.ref == 'refs/heads/staging' && github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: build
          path: client/build
      - name: Deploy to Staging EC2
        env:
          PRIVATE_KEY: ${{ secrets.STAGING_EC2_PRIVATE_KEY }}
          HOST: ${{ secrets.STAGING_EC2_HOST }}
          USER: ${{ secrets.STAGING_EC2_USER }}
        run: |
          echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
          ssh -i private_key -o StrictHostKeyChecking=no ${USER}@${HOST} "mkdir -p ~/capstone/staging"
          ssh -i private_key -o StrictHostKeyChecking=no ${USER}@${HOST} "
            if [ -d ~/capstone/staging/uploads ]; then
              mv ~/capstone/staging/uploads ~/capstone/staging_uploads_backup
            fi
          "
          rsync -avz -e "ssh -i private_key -o StrictHostKeyChecking=no" --delete \
            --exclude '.git' --exclude 'node_modules' \
            ./ ${USER}@${HOST}:~/capstone/staging
          ssh -i private_key -o StrictHostKeyChecking=no ${USER}@${HOST} "
            if [ -d ~/capstone/staging_uploads_backup ]; then
              rm -rf ~/capstone/staging/uploads
              mv ~/capstone/staging_uploads_backup ~/capstone/staging/uploads
            fi
            cd ~/capstone/staging
            yarn install
            echo 'PORT=4000' > .env
            pm2 stop all || true
            pm2 start api/index.js
            echo 'Staging deployment completed successfully!'
          "

  deploy-production:
    needs: build-and-test
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: build
          path: client/build
      - name: Deploy to Production EC2
        env:
          PRIVATE_KEY: ${{ secrets.PROD_EC2_PRIVATE_KEY }}
          HOST: ${{ secrets.PROD_EC2_HOST }}
          USER: ${{ secrets.PROD_EC2_USER }}
        run: |
          echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
          ssh -i private_key -o StrictHostKeyChecking=no ${USER}@${HOST} "mkdir -p ~/capstone/production"
          ssh -i private_key -o StrictHostKeyChecking=no ${USER}@${HOST} "
            if [ -d ~/capstone/production/uploads ]; then
              mv ~/capstone/production/uploads ~/capstone/production_uploads_backup
            fi
          "
          rsync -avz -e "ssh -i private_key -o StrictHostKeyChecking=no" --delete \
            --exclude '.git' --exclude 'node_modules' \
            ./ ${USER}@${HOST}:~/capstone/production
          ssh -i private_key -o StrictHostKeyChecking=no ${USER}@${HOST} "
            if [ -d ~/capstone/production_uploads_backup ]; then
              rm -rf ~/capstone/production/uploads
              mv ~/capstone/production_uploads_backup ~/capstone/production/uploads
            fi
            cd ~/capstone/production
            yarn install
            echo 'PORT=4000' > .env
            pm2 stop all || true
            pm2 start api/index.js
            echo 'Production deployment completed successfully!'
          "

  rollback:
    needs: [deploy-staging, deploy-production]
    if: failure()
    runs-on: ubuntu-latest
    steps:
      - name: Rollback to previous version
        env:
          PRIVATE_KEY: ${{ secrets.PROD_EC2_PRIVATE_KEY }}
          HOST: ${{ secrets.PROD_EC2_HOST }}
          USER: ${{ secrets.PROD_EC2_USER }}
        run: |
          echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
          ssh -i private_key -o StrictHostKeyChecking=no ${USER}@${HOST} "
            cd ~/capstone/production
            git fetch origin main
            git checkout main
            git reset --hard HEAD~1
            yarn install
            pm2 restart all
            echo 'Rollback completed successfully!'
          "
